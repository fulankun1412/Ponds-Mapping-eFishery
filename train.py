# -*- coding: utf-8 -*-
"""YOLOv8 Segmentation Training.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10rRQKUjtpF_8QVCNX0wn6iejer6tXhnQ
"""

# Commented out IPython magic to ensure Python compatibility.
# Import OS module and Create folder base on user who use it
import os
import shutil
modelTrainingName = "Ponds-eFishery" #@param ["OCR-eFishery", "Ponds-eFishery"]
dirs = "/content/drive/MyDrive/TrainingModel/YOLOv8-Segmentation"
os.makedirs(dirs, exist_ok=True)

# Download YOLOv8 Ultralytics and install requirements
# %pip install --upgrade clearml tensorboard ultralytics
# %pip install roboflow

from clearml import Task, Logger, browser_login
browser_login()
if modelTrainingName == "OCR-eFishery":
  task = Task.init(project_name='Take Home Test Model-eFishery', task_name='YOLOv8 Segmentation Training Model OCR', reuse_last_task_id=True)
elif modelTrainingName == "Ponds-eFishery":
  task = Task.init(project_name='Take Home Test Model-eFishery', task_name='YOLOv8 Segmentation Training Model Ponds', reuse_last_task_id=True)

from roboflow import Roboflow
rf = Roboflow(api_key="tfPZGFqYT5wWafUYvt4s")
project = rf.workspace("take-home-test").project("ponds-segmen-model")
dataset = project.version(2).download("yolov8")

from ultralytics import YOLO

# Load a model
model = YOLO('yolov8l-seg.yaml')  # build a new model from YAML
model = YOLO('yolov8l-seg.pt')  # load a pretrained model (recommended for training)
model = YOLO('yolov8l-seg.yaml').load('yolov8l.pt')  # build from YAML and transfer weights

# Train the model
model.train(data = os.path.join(dataset.location, "data.yaml"), epochs =500, 
            imgsz = 640, batch = 8, 
            device = 0, name = modelTrainingName)

task.close()

